{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","_useState","useState","color","backgroundColor","_useState2","_slicedToArray","mystyle","_useState3","_useState4","React","createElement","Fragment","className","id","type","data-bs-toggle","style","data-bs-target","aria-expanded","aria-controls","data-bs-parent","Navbar","concat","mode","Link","to","title","aria-label","aria-current","aboutText","onClick","toggleMode","role","htmlFor","TextForm","text","setText","heading","value","onChange","event","console","log","target","rows","disabled","length","newText","toUpperCase","showAlert","newText1","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","joinedWords","split","reverse","join","document","getElementById","select","navigator","clipboard","writeText","filter","element","defaultProps","Alert","height","alert","word","lower","charAt","slice","capatilize","App","setMode","setAlert","message","setTimeout","Router","body","Routes","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.cc5174e7.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nexport default function About(props) {\r\n    const [mystyle, setMystyle]=useState({\r\n        color:\"black\",\r\n        backgroundColor: \"white\"\r\n    })\r\n\r\n    const [btnStyle, setbtnStyle]=useState(\"Enable Dark Mode\");\r\n    const toggleStyle=()=>{\r\n        if(mystyle.color===\"black\"){\r\n            setMystyle({\r\n                color:\"white\",\r\n                backgroundColor:\"black\",\r\n                border:\"1px solid white\"\r\n            });\r\n            setbtnStyle(\"Enable Light Mode\");\r\n        }\r\n        else{\r\n            setMystyle({\r\n                color:\"black\",\r\n                backgroundColor :\"white\",\r\n            });\r\n            setbtnStyle(\"Enable Dark Mode\");\r\n        }\r\n    }\r\n  return (\r\n    <>\r\n        <h1>About Us</h1>\r\n        <div className='container my-3'>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                    <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" style={mystyle} data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        <strong>Analyze your text</strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle} > \r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={mystyle} >\r\n                        <strong>Free to use</strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle}>\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={mystyle} >\r\n                        <strong>Browser compatible</strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={mystyle} >\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <button type=\"button\" class=\"btn btn-primary my-3\" onClick={toggleStyle}>{btnStyle}</button> */}\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to={'/'}>Home</Link>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={'/about'}>{props.aboutText}</Link>\r\n           </li> */}\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light' ? 'dark' : 'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes= {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n};\r\nNavbar.defaultProps={\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n};","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText]= useState(\"\");\r\n  // text=\"How are you\" //this is wrong way to change the text value in react\r\n  // setText(\"How are you\") //this is correct way to change the text value in react\r\n  const handleUpClick=()=>{\r\n    console.log(\"Uppercase was clicked\");\r\n    let newText= text.toUpperCase();\r\n    // setText(\"You have clicked on handleUpClick\");\r\n    props.showAlert(\"Text has been converted to upper case!\", \"success\");\r\n    setText(newText);\r\n  }\r\n  const handleonChange=(event)=>{\r\n    console.log(\"on change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleLoClick=()=>{\r\n    let newText1= text.toLowerCase();\r\n    // setText(\"You have clicked on handleUpClick\");\r\n    setText(newText1);\r\n    props.showAlert(\"Converted to lower case!\", \"success\");\r\n  }\r\n\r\n  const handleSpeak=()=>{\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text = text;\r\n    window.speechSynthesis.speak(msg);\r\n  }\r\n\r\n  const reversed = () => {\r\n    let splitWord = text.split(\"\");\r\n    let reverseWord = splitWord.reverse(\"\");\r\n    let joinedWords = reverseWord.join(\"\");\r\n    let newText = joinedWords\r\n    setText(newText);\r\n    props.showAlert(\"Text has been reversed!\", \"success\");\r\n  };\r\n\r\n  const handleCopy=()=>{\r\n    var text=document.getElementById(\"my-box\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to clipbord!\", \"success\");\r\n  }\r\n  const handleExtraSpace=()=>{\r\n    let newText= text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Space has been removed from text!\", \"success\");\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>    \r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleonChange} style={{backgroundColor: props.mode==='dark' ? 'grey' : 'white', color: props.mode==='dark'?'white':'black'}}  id=\"my-box\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleSpeak}>Speak Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={reversed }>Reverse Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpace}>Remove Extra Spaces</button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>Your text summery</h1>\r\n        <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} Words and {text.length} charecter</p>\r\n        <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minute to read</p>\r\n        <h1>Preview</h1>\r\n        <p>{text.length>0 ? text : \"Nothing to preview!\"}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n  const capatilize=(word)=>{\r\n      const lower= word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n  }\r\n  return (\r\n    <div style={{height: \"50px\"}}>\r\n      {props.alert && (\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{capatilize(props.alert.type)} : {props.alert.msg}</strong>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport React, {useState} from 'react'\nimport './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\n\n  import {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    // Link\n  } from \"react-router-dom\";\n\nfunction App() {\n  \n  const [mode, setMode]=useState('light');\n\n  const [alert, setAlert]= useState(null);\n\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg:message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor=\"grey\";\n      showAlert(\"Dark mode has been enable\", \"success\");\n      document.title='textUtils-Dark Mode';\n\n      // setInterval(() => {\n      //   document.title='textUtils is amzing website';\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title='Install textUtils now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"White mode has been enable\", \"success\");\n      document.title='textUtils-Light Mode';\n    }\n  }\n  \n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert = {alert}/>  \n        <div className=\"container my-3\">\n          <Routes>   \n            <Route path=\"/about\" element={<About mode={mode} />} />\n            <Route path=\"/\" element={<TextForm heading=\"Enter the text to analyze below\" showAlert={showAlert}/>} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n// toggleMode={toggleMode} \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}