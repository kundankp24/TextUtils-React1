{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","newText1","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","joinedWords","split","reverse","join","document","getElementById","select","navigator","clipboard","writeText","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capatilize","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.a4f217b1.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href={\"#\"}>{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n           </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form> */}\r\n            {/* <div className={`form-check form-switch text-${props.mode=='light' ? 'dark' : 'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'? 'dark': 'light'}`}>\r\n                <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes= {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n};\r\nNavbar.defaultProps={\r\n    title: 'Set title here',\r\n    aboutText: 'About text here'\r\n};","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText]= useState(\"\");\r\n  // text=\"How are you\" //this is wrong way to change the text value in react\r\n  // setText(\"How are you\") //this is correct way to change the text value in react\r\n  const handleUpClick=()=>{\r\n    console.log(\"Uppercase was clicked\");\r\n    let newText= text.toUpperCase();\r\n    // setText(\"You have clicked on handleUpClick\");\r\n    props.showAlert(\"Text has been converted to upper case!\", \"success\");\r\n    setText(newText);\r\n  }\r\n  const handleonChange=(event)=>{\r\n    console.log(\"on change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleLoClick=()=>{\r\n    let newText1= text.toLowerCase();\r\n    // setText(\"You have clicked on handleUpClick\");\r\n    setText(newText1);\r\n    props.showAlert(\"Converted to lower case!\", \"success\");\r\n  }\r\n\r\n  const handleSpeak=()=>{\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text = text;\r\n    window.speechSynthesis.speak(msg);\r\n  }\r\n\r\n  const reversed = () => {\r\n    let splitWord = text.split(\"\");\r\n    let reverseWord = splitWord.reverse(\"\");\r\n    let joinedWords = reverseWord.join(\"\");\r\n    let newText = joinedWords\r\n    setText(newText);\r\n    props.showAlert(\"Text has been reversed!\", \"success\");\r\n  };\r\n\r\n  const handleCopy=()=>{\r\n    var text=document.getElementById(\"my-box\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to clipbord!\", \"success\");\r\n  }\r\n  const handleExtraSpace=()=>{\r\n    let newText= text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Space has been removed from text!\", \"success\");\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>    \r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleonChange} style={{backgroundColor: props.mode==='dark' ? 'grey' : 'white', color: props.mode==='dark'?'white':'black'}}  id=\"my-box\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleSpeak}>Speak Text</button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={reversed }>Reverse Text</button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpace}>Remove Extra Spaces</button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>Your text summery</h1>\r\n        <p>{text.split(\" \").length} Words and {text.length} charecter</p>\r\n        <p>{0.008 * text.split(\" \").length} Minute to read</p>\r\n        <h1>Preview</h1>\r\n        <p>{text.length>0 ? text : \"Enter something in the textbox above to preview it here \"}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n  const capatilize=(word)=>{\r\n      const lower= word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n  }\r\n  return (\r\n    <div>\r\n      {props.alert && (\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{capatilize(props.alert.type)} : {props.alert.msg}</strong>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport React, {useState} from 'react'\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\n\n  // import {\n  //   BrowserRouter as Router,\n  //   Routes,\n  //   Route,\n  //   Link\n  // } from \"react-router-dom\";\n\nfunction App() {\n  \n  const [mode, setMode]=useState('light');\n\n  const [alert, setAlert]= useState(null);\n\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg:message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor=\"grey\";\n      showAlert(\"Dark mode has been enable\", \"success\");\n      document.title='textUtils-Dark Mode';\n\n      // setInterval(() => {\n      //   document.title='textUtils is amzing website';\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title='Install textUtils now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"White mode has been enable\", \"success\");\n      document.title='textUtils-Light Mode';\n    }\n  }\n  \n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n            {/* <Routes> */}\n              {/* <Route exact path=\"/about\" element={<About/>} >\n              </Route> */}\n              {/* <Route exact path=\"/home\" element={<TextForm showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode}/>}> */}\n              <TextForm showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode}/>\n              {/* </Route> */}\n            {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n// toggleMode={toggleMode} \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}